//=============================================================================
//
// マップ生成
// Author:arita meigen
//
//=============================================================================

//-----------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------
#include"Map.h"
#include "nlohmann/json.hpp"
#include"file.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CMap::CMap()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CMap::~CMap()
{
}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CMap::Init()
{
	for (int i = 0; i < MAX_BLOCK; i++)
	{
		m_pBlock[i] = CBlock::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f), 0.0f);
	}
	Load();
	return S_OK;
}

//=============================================================================
// 生成
//=============================================================================
CMap * CMap::Create(int stgnumber)
{
	CMap*pMap = new CMap();

	if (pMap!=nullptr)
	{
	pMap->m_StageNumber = (STAGE)stgnumber;
	pMap->Init();
	}
	return pMap;
}

//=============================================================================
// 読み込み
//=============================================================================
void CMap::Load()
{
	using json = nlohmann::json;
	json map = LoadJson("data/FILE/map.json");

	int playerCount = map["PLAYER_SPAWN"].size();

	for (int i = 0; i < playerCount; i++)
	{
		float x = map["PLAYER_SPAWN"][i][0];
		float y = map["PLAYER_SPAWN"][i][1];
	}

	for (int i = 0; i < map["MAP"].size(); i++)
	{
		for (int j = 0; j < map["MAP"][i].size(); j++)
		{
			switch ((int)map["MAP"][i][j])
			{
			case 0:
				m_pBlock[i] = CBlock::Create(D3DXVECTOR3(i * 50.0f - map["MAP"].size() * 0.5f * 25.0f, 0.0f, j * -25.0f + map["MAP"][i].size() * 0.5f * 25.0f), 0.0f);
				break;
			case 1:
				m_pBlock[i] = CBlock::Create(D3DXVECTOR3(i * 50.0f - map["MAP"].size() * 0.5f * 25.0f, 0.0f, j * -25.0f + map["MAP"][i].size() * 0.5f * 25.0f), 0.0f);
				break;
			case -1:
				break;
			default:
				break;
			}
		}
	}
}
