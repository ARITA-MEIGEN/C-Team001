//=============================================================================
//
// ゲーム中のカメラ
// Author : Yuda Kaito
//
//=============================================================================
//-----------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------
#include "CameraResult.h"

//-----------------------------------------------------------------------------
//静的変数宣言
//-----------------------------------------------------------------------------
const float CCameraResult::SPEED = 5.0f;		// 移動速度
const float CCameraResult::FACTOR = 0.01f;	// 追従の係数
const float CCameraResult::ROTSPEED = 0.05f;	// 旋回速度
const float CCameraResult::ZPOS = -400.0f;	// Z座標

//-----------------------------------------------------------------------------
// コンストラクタ
//-----------------------------------------------------------------------------
CCameraResult::CCameraResult()
{
}

//-----------------------------------------------------------------------------
// デストラクタ
//-----------------------------------------------------------------------------
CCameraResult::~CCameraResult()
{
}

//-----------------------------------------------------------------------------
// 初期化
//-----------------------------------------------------------------------------
void CCameraResult::Init()
{
	CCamera::Init();

	//視点・注視点を設定
	m_posV = D3DXVECTOR3(0.0f, 250.0f, 0.0f);
	m_posR = D3DXVECTOR3(0.0f, -500.0f, 00.0f);
}

//-----------------------------------------------------------------------------
// 更新
//-----------------------------------------------------------------------------
void CCameraResult::Update()
{
	CCamera::Update();

	if (m_posR.y<250.0f)
	{
		m_posR.y += 5.0f;
	}

	if (m_posV.z>-400.0f)
	{
		m_posV.z -= 5.0f;
	}
}

//-----------------------------------------------------------------------------
// 生成
//-----------------------------------------------------------------------------
CCameraResult* CCameraResult::Create()
{
	CCameraResult* pCamera = new CCameraResult;

	if (pCamera == nullptr)
	{
		return nullptr;
	}

	pCamera->Init();
	return pCamera;
}
